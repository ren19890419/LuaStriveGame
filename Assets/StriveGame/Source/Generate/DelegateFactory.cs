//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		dict.Add(typeof(UnityEngine.UI.InputField.OnValidateInput), factory.UnityEngine_UI_InputField_OnValidateInput);
		dict.Add(typeof(System.Action<NotiData>), factory.System_Action_NotiData);
		dict.Add(typeof(System.Action<UnityEngine.Object[]>), factory.System_Action_UnityEngine_Objects);
		dict.Add(typeof(KBEngine.NetworkInterface.ConnectCallback), factory.KBEngine_NetworkInterface_ConnectCallback);
		dict.Add(typeof(KBEngine.KBELuaUtil.CallLuaFunction), factory.KBEngine_KBELuaUtil_CallLuaFunction);
		dict.Add(typeof(EasyJoystick.JoystickMoveStartHandler), factory.EasyJoystick_JoystickMoveStartHandler);
		dict.Add(typeof(EasyJoystick.JoystickMoveHandler), factory.EasyJoystick_JoystickMoveHandler);
		dict.Add(typeof(EasyJoystick.JoystickMoveEndHandler), factory.EasyJoystick_JoystickMoveEndHandler);
		dict.Add(typeof(EasyJoystick.JoystickTouchStartHandler), factory.EasyJoystick_JoystickTouchStartHandler);
		dict.Add(typeof(EasyJoystick.JoystickTapHandler), factory.EasyJoystick_JoystickTapHandler);
		dict.Add(typeof(EasyJoystick.JoystickDoubleTapHandler), factory.EasyJoystick_JoystickDoubleTapHandler);
		dict.Add(typeof(EasyJoystick.JoystickTouchUpHandler), factory.EasyJoystick_JoystickTouchUpHandler);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.UnityEngine_UI_InputField_OnValidateInput);
		DelegateTraits<System.Action<NotiData>>.Init(factory.System_Action_NotiData);
		DelegateTraits<System.Action<UnityEngine.Object[]>>.Init(factory.System_Action_UnityEngine_Objects);
		DelegateTraits<KBEngine.NetworkInterface.ConnectCallback>.Init(factory.KBEngine_NetworkInterface_ConnectCallback);
		DelegateTraits<KBEngine.KBELuaUtil.CallLuaFunction>.Init(factory.KBEngine_KBELuaUtil_CallLuaFunction);
		DelegateTraits<EasyJoystick.JoystickMoveStartHandler>.Init(factory.EasyJoystick_JoystickMoveStartHandler);
		DelegateTraits<EasyJoystick.JoystickMoveHandler>.Init(factory.EasyJoystick_JoystickMoveHandler);
		DelegateTraits<EasyJoystick.JoystickMoveEndHandler>.Init(factory.EasyJoystick_JoystickMoveEndHandler);
		DelegateTraits<EasyJoystick.JoystickTouchStartHandler>.Init(factory.EasyJoystick_JoystickTouchStartHandler);
		DelegateTraits<EasyJoystick.JoystickTapHandler>.Init(factory.EasyJoystick_JoystickTapHandler);
		DelegateTraits<EasyJoystick.JoystickDoubleTapHandler>.Init(factory.EasyJoystick_JoystickDoubleTapHandler);
		DelegateTraits<EasyJoystick.JoystickTouchUpHandler>.Init(factory.EasyJoystick_JoystickTouchUpHandler);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.Check_UnityEngine_UI_InputField_OnValidateInput);
		TypeTraits<System.Action<NotiData>>.Init(factory.Check_System_Action_NotiData);
		TypeTraits<System.Action<UnityEngine.Object[]>>.Init(factory.Check_System_Action_UnityEngine_Objects);
		TypeTraits<KBEngine.NetworkInterface.ConnectCallback>.Init(factory.Check_KBEngine_NetworkInterface_ConnectCallback);
		TypeTraits<KBEngine.KBELuaUtil.CallLuaFunction>.Init(factory.Check_KBEngine_KBELuaUtil_CallLuaFunction);
		TypeTraits<EasyJoystick.JoystickMoveStartHandler>.Init(factory.Check_EasyJoystick_JoystickMoveStartHandler);
		TypeTraits<EasyJoystick.JoystickMoveHandler>.Init(factory.Check_EasyJoystick_JoystickMoveHandler);
		TypeTraits<EasyJoystick.JoystickMoveEndHandler>.Init(factory.Check_EasyJoystick_JoystickMoveEndHandler);
		TypeTraits<EasyJoystick.JoystickTouchStartHandler>.Init(factory.Check_EasyJoystick_JoystickTouchStartHandler);
		TypeTraits<EasyJoystick.JoystickTapHandler>.Init(factory.Check_EasyJoystick_JoystickTapHandler);
		TypeTraits<EasyJoystick.JoystickDoubleTapHandler>.Init(factory.Check_EasyJoystick_JoystickDoubleTapHandler);
		TypeTraits<EasyJoystick.JoystickTouchUpHandler>.Init(factory.Check_EasyJoystick_JoystickTouchUpHandler);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = factory.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<UnityEngine.UI.InputField.OnValidateInput>.Push = factory.Push_UnityEngine_UI_InputField_OnValidateInput;
		StackTraits<System.Action<NotiData>>.Push = factory.Push_System_Action_NotiData;
		StackTraits<System.Action<UnityEngine.Object[]>>.Push = factory.Push_System_Action_UnityEngine_Objects;
		StackTraits<KBEngine.NetworkInterface.ConnectCallback>.Push = factory.Push_KBEngine_NetworkInterface_ConnectCallback;
		StackTraits<KBEngine.KBELuaUtil.CallLuaFunction>.Push = factory.Push_KBEngine_KBELuaUtil_CallLuaFunction;
		StackTraits<EasyJoystick.JoystickMoveStartHandler>.Push = factory.Push_EasyJoystick_JoystickMoveStartHandler;
		StackTraits<EasyJoystick.JoystickMoveHandler>.Push = factory.Push_EasyJoystick_JoystickMoveHandler;
		StackTraits<EasyJoystick.JoystickMoveEndHandler>.Push = factory.Push_EasyJoystick_JoystickMoveEndHandler;
		StackTraits<EasyJoystick.JoystickTouchStartHandler>.Push = factory.Push_EasyJoystick_JoystickTouchStartHandler;
		StackTraits<EasyJoystick.JoystickTapHandler>.Push = factory.Push_EasyJoystick_JoystickTapHandler;
		StackTraits<EasyJoystick.JoystickDoubleTapHandler>.Push = factory.Push_EasyJoystick_JoystickDoubleTapHandler;
		StackTraits<EasyJoystick.JoystickTouchUpHandler>.Push = factory.Push_EasyJoystick_JoystickTouchUpHandler;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func) : base(func) { }
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public UnityEngine.UI.InputField.OnValidateInput UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.UI.InputField.OnValidateInput fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func);
			UnityEngine.UI.InputField.OnValidateInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func, self);
			UnityEngine.UI.InputField.OnValidateInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.UI.InputField.OnValidateInput), L, pos);
	}

	void Push_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, UnityEngine.UI.InputField.OnValidateInput o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_NotiData_Event : LuaDelegate
	{
		public System_Action_NotiData_Event(LuaFunction func) : base(func) { }
		public System_Action_NotiData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(NotiData param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(NotiData param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<NotiData> System_Action_NotiData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<NotiData> fn = delegate(NotiData param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_NotiData_Event target = new System_Action_NotiData_Event(func);
			System.Action<NotiData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_NotiData_Event target = new System_Action_NotiData_Event(func, self);
			System.Action<NotiData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_NotiData(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<NotiData>), L, pos);
	}

	void Push_System_Action_NotiData(IntPtr L, System.Action<NotiData> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Objects_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Objects_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Objects_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Object[]> System_Action_UnityEngine_Objects(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Object[]> fn = delegate(UnityEngine.Object[] param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Objects_Event target = new System_Action_UnityEngine_Objects_Event(func);
			System.Action<UnityEngine.Object[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Objects_Event target = new System_Action_UnityEngine_Objects_Event(func, self);
			System.Action<UnityEngine.Object[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Objects(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Object[]>), L, pos);
	}

	void Push_System_Action_UnityEngine_Objects(IntPtr L, System.Action<UnityEngine.Object[]> o)
	{
		ToLua.Push(L, o);
	}

	class KBEngine_NetworkInterface_ConnectCallback_Event : LuaDelegate
	{
		public KBEngine_NetworkInterface_ConnectCallback_Event(LuaFunction func) : base(func) { }
		public KBEngine_NetworkInterface_ConnectCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, int param1, bool param2, object param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, int param1, bool param2, object param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			func.EndPCall();
		}
	}

	public KBEngine.NetworkInterface.ConnectCallback KBEngine_NetworkInterface_ConnectCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			KBEngine.NetworkInterface.ConnectCallback fn = delegate(string param0, int param1, bool param2, object param3) { };
			return fn;
		}

		if(!flag)
		{
			KBEngine_NetworkInterface_ConnectCallback_Event target = new KBEngine_NetworkInterface_ConnectCallback_Event(func);
			KBEngine.NetworkInterface.ConnectCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			KBEngine_NetworkInterface_ConnectCallback_Event target = new KBEngine_NetworkInterface_ConnectCallback_Event(func, self);
			KBEngine.NetworkInterface.ConnectCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_KBEngine_NetworkInterface_ConnectCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(KBEngine.NetworkInterface.ConnectCallback), L, pos);
	}

	void Push_KBEngine_NetworkInterface_ConnectCallback(IntPtr L, KBEngine.NetworkInterface.ConnectCallback o)
	{
		ToLua.Push(L, o);
	}

	class KBEngine_KBELuaUtil_CallLuaFunction_Event : LuaDelegate
	{
		public KBEngine_KBELuaUtil_CallLuaFunction_Event(LuaFunction func) : base(func) { }
		public KBEngine_KBELuaUtil_CallLuaFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public object[] Call(string param0, object[] param1)
		{
			func.BeginPCall();
			func.Push(param0);

			for (int i = 0; i < param1.Length; i++)
			{
				func.Push(param1[i]);
			}

			func.PCall();
			object[] ret = (object[])func.CheckObject(typeof(object[]));
			func.EndPCall();
			return ret;
		}

		public object[] CallWithSelf(string param0, object[] param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);

			for (int i = 0; i < param1.Length; i++)
			{
				func.Push(param1[i]);
			}

			func.PCall();
			object[] ret = (object[])func.CheckObject(typeof(object[]));
			func.EndPCall();
			return ret;
		}
	}

	public KBEngine.KBELuaUtil.CallLuaFunction KBEngine_KBELuaUtil_CallLuaFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			KBEngine.KBELuaUtil.CallLuaFunction fn = delegate(string param0, object[] param1) { return null; };
			return fn;
		}

		if(!flag)
		{
			KBEngine_KBELuaUtil_CallLuaFunction_Event target = new KBEngine_KBELuaUtil_CallLuaFunction_Event(func);
			KBEngine.KBELuaUtil.CallLuaFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			KBEngine_KBELuaUtil_CallLuaFunction_Event target = new KBEngine_KBELuaUtil_CallLuaFunction_Event(func, self);
			KBEngine.KBELuaUtil.CallLuaFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_KBEngine_KBELuaUtil_CallLuaFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(KBEngine.KBELuaUtil.CallLuaFunction), L, pos);
	}

	void Push_KBEngine_KBELuaUtil_CallLuaFunction(IntPtr L, KBEngine.KBELuaUtil.CallLuaFunction o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickMoveStartHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickMoveStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickMoveStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickMoveStartHandler EasyJoystick_JoystickMoveStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickMoveStartHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickMoveStartHandler_Event target = new EasyJoystick_JoystickMoveStartHandler_Event(func);
			EasyJoystick.JoystickMoveStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickMoveStartHandler_Event target = new EasyJoystick_JoystickMoveStartHandler_Event(func, self);
			EasyJoystick.JoystickMoveStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickMoveStartHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickMoveStartHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickMoveStartHandler(IntPtr L, EasyJoystick.JoystickMoveStartHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickMoveHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickMoveHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickMoveHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickMoveHandler EasyJoystick_JoystickMoveHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickMoveHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickMoveHandler_Event target = new EasyJoystick_JoystickMoveHandler_Event(func);
			EasyJoystick.JoystickMoveHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickMoveHandler_Event target = new EasyJoystick_JoystickMoveHandler_Event(func, self);
			EasyJoystick.JoystickMoveHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickMoveHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickMoveHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickMoveHandler(IntPtr L, EasyJoystick.JoystickMoveHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickMoveEndHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickMoveEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickMoveEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickMoveEndHandler EasyJoystick_JoystickMoveEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickMoveEndHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickMoveEndHandler_Event target = new EasyJoystick_JoystickMoveEndHandler_Event(func);
			EasyJoystick.JoystickMoveEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickMoveEndHandler_Event target = new EasyJoystick_JoystickMoveEndHandler_Event(func, self);
			EasyJoystick.JoystickMoveEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickMoveEndHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickMoveEndHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickMoveEndHandler(IntPtr L, EasyJoystick.JoystickMoveEndHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickTouchStartHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickTouchStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickTouchStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickTouchStartHandler EasyJoystick_JoystickTouchStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickTouchStartHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickTouchStartHandler_Event target = new EasyJoystick_JoystickTouchStartHandler_Event(func);
			EasyJoystick.JoystickTouchStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickTouchStartHandler_Event target = new EasyJoystick_JoystickTouchStartHandler_Event(func, self);
			EasyJoystick.JoystickTouchStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickTouchStartHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickTouchStartHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickTouchStartHandler(IntPtr L, EasyJoystick.JoystickTouchStartHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickTapHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickTapHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickTapHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickTapHandler EasyJoystick_JoystickTapHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickTapHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickTapHandler_Event target = new EasyJoystick_JoystickTapHandler_Event(func);
			EasyJoystick.JoystickTapHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickTapHandler_Event target = new EasyJoystick_JoystickTapHandler_Event(func, self);
			EasyJoystick.JoystickTapHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickTapHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickTapHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickTapHandler(IntPtr L, EasyJoystick.JoystickTapHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickDoubleTapHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickDoubleTapHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickDoubleTapHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickDoubleTapHandler EasyJoystick_JoystickDoubleTapHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickDoubleTapHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickDoubleTapHandler_Event target = new EasyJoystick_JoystickDoubleTapHandler_Event(func);
			EasyJoystick.JoystickDoubleTapHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickDoubleTapHandler_Event target = new EasyJoystick_JoystickDoubleTapHandler_Event(func, self);
			EasyJoystick.JoystickDoubleTapHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickDoubleTapHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickDoubleTapHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickDoubleTapHandler(IntPtr L, EasyJoystick.JoystickDoubleTapHandler o)
	{
		ToLua.Push(L, o);
	}

	class EasyJoystick_JoystickTouchUpHandler_Event : LuaDelegate
	{
		public EasyJoystick_JoystickTouchUpHandler_Event(LuaFunction func) : base(func) { }
		public EasyJoystick_JoystickTouchUpHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(MovingJoystick param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(MovingJoystick param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EasyJoystick.JoystickTouchUpHandler EasyJoystick_JoystickTouchUpHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyJoystick.JoystickTouchUpHandler fn = delegate(MovingJoystick param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyJoystick_JoystickTouchUpHandler_Event target = new EasyJoystick_JoystickTouchUpHandler_Event(func);
			EasyJoystick.JoystickTouchUpHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyJoystick_JoystickTouchUpHandler_Event target = new EasyJoystick_JoystickTouchUpHandler_Event(func, self);
			EasyJoystick.JoystickTouchUpHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EasyJoystick_JoystickTouchUpHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EasyJoystick.JoystickTouchUpHandler), L, pos);
	}

	void Push_EasyJoystick_JoystickTouchUpHandler(IntPtr L, EasyJoystick.JoystickTouchUpHandler o)
	{
		ToLua.Push(L, o);
	}

}

